#########################################################################
# Use this file to answer Review Exercises from the Big Java textbook
#########################################################################

R8.1 Encapsulation. What is encapsulation? Why is it useful?
Encapsulation is the process of providing a public interface, while hiding the
implementation details.
Encapsulation enables changes in the implementation whitout affecting users of
a class.

R8.4 Public interface. What is the public interface of a class? How does it differ
from the implementation of a class?
The set of all methods provided by a class, together with a description of their
behavior. It is a gateway for other users to use the implementation of the class.

R8.7 Instance versus static. What is an instance method, and how does it differ from
a static method?
An instance method can access the instance variables of the object on which it acts.
A static method cannot access the instance variables.

R8.8 Mutator and accessor. What is a mutator method? What is an accessor method?
A mutator method changes the object on which it operates.
An accessor method does not change the object on which it operates.

R8.9 Implicit parameter. What is an implicit parameter? How does it differ from an
explicit parameter?
The object on which a method is invoked.
Explicit parameters are explicitly mentioned in the method declaration, while the
implicit parameters are not.

R8.10 Implicit parameter. How many implicit parameters can an instance method have?
How many implicit parameters can a static method have? How many explicit parameters
can an instance method have?
One.
Zero.
Zero or more.

R8.12 Constructors. How many constructors can a class have? Can you have a class with
no constructors? If a class has more than one constructor, which of them gets called?
One or more.
No.
The compiler would choose the constructor that matches the arguments that we supply.

R8.16 Instance variables. Instance variables are “hidden” by declaring them as private,
but they aren’t hidden very well at all. Anyone can read the class declaration. Explain
to what extent the private reserved word hides the private implementation of a class.
The private reserved word hides the private instance variable from being able to be
accessed by the method of other classes, such that other classes can not change the
value of the variable with their own methods. Other classes can not easily alter the
implementation of the class.

R8.19 The this reference. What is the this reference? Why would you use it?
In a method, the this reference refers to the implicit parameter.
We can use it to make it clear that we are referring to instance variables but not
local variables.

R8.20 Zero, null, false, empty String. What is the difference between the number zero,
the null reference, the value false, and the empty string?
The number zero, the value false are primitive type variables and they store values
zero and false.
An empty string is an object variable that stores the reference to the empty string "".
The null reference is a special reference meaning that the object reference refers
to no object at all.